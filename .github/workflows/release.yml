name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Runs when a tag like v1.0.0 is pushed

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Match your Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Update version in __init__.py
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG_NAME#v}"
          echo "Updating __version__ to $VERSION in markitdowngui/__init__.py"
          # Using a temporary file for sed on macOS compatibility
          sed -i.bak "s/__version__ = .*/__version__ = \"$VERSION\"/g" markitdowngui/__init__.py
          rm markitdowngui/__init__.py.bak
          echo "Contents of __init__.py after update:"
          cat markitdowngui/__init__.py
        shell: bash

      - name: Build executable
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pyinstaller --clean --onefile --windowed --collect-submodules markitdowngui -n MarkItDown markitdowngui/main.py
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            pyinstaller --clean --strip --onefile --collect-submodules markitdowngui -n MarkItDown markitdowngui/main.py
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            pyinstaller --clean --strip --onefile --collect-submodules markitdowngui -n MarkItDown markitdowngui/main.py
          fi
        shell: bash

      - name: Rename artifact
        run: |
          mkdir dist_output
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            mv dist/MarkItDown.exe dist_output/MarkItDown-${{ runner.os }}.exe
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            mv dist/MarkItDown dist_output/MarkItDown-${{ runner.os }}
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            mv dist/MarkItDown dist_output/MarkItDown-${{ runner.os }}
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MarkItDown-${{ runner.os }}
          path: dist_output/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*  # Upload all artifacts
          token: ${{ secrets.GITHUB_TOKEN }}
